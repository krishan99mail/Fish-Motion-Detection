#include <SimpleDHT.h>
#include <OneWire.h>
#include <DallasTemperature.h>
#include <Wire.h>
#include "TinyGPS++.h"
#include "SoftwareSerial.h"
/////
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
int LED = 9;
int LED2 = 6;
int LED3 = 5;
RF24 radio(7, 8); // CE, CSN
const uint64_t pipeOut = 0xE8E8F0F0E1LL; 
const byte address[6] = "001";
struct MyData {

 float b1;
float b2;
float b3;
float b4;
 float b5;
 

};

MyData data;

SoftwareSerial serial_connection(10, 11); //RX=pin 10, TX=pin 11
TinyGPSPlus gps;

int pinDHT11 = 2;
#define ONE_WIRE_BUS 4
OneWire oneWire(ONE_WIRE_BUS); 

DallasTemperature sensors(&oneWire);

SimpleDHT11 dht11(pinDHT11);
const int analogInPin = A1; 
int sensorValue = 0; 
unsigned long int avgValue; 
float b;
int buf[10],temp;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void setup()

{
  pinMode(LED,OUTPUT);
  pinMode(LED2,OUTPUT);
  radio.begin();
  radio.setAutoAck(false);
  radio.openWritingPipe(address);
  radio.setPALevel(RF24_PA_MIN);
  radio.openWritingPipe(pipeOut);
  radio.stopListening();
  
  Serial.begin(9600);
  serial_connection.begin(9600);//10.11 pin call
  sensors.begin();  
  Serial.println("GPS Start");

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void loop() {

   
  
 /* while(serial_connection.available())//While there are characters to come from the GPS
  {
    gps.encode(serial_connection.read());//This feeds the serial NMEA data into the library one char at a time
  }
if
 (gps.location.isUpdated())//This will pretty much be fired all the time anyway but will at least reduce it to only after a package of NMEA data comes in
 {
    //Get the latest info from the gps object which it derived from the data sent by the GPS unit
    Serial.println("Satellite Count:");
    Serial.println(gps.satellites.value());
    Serial.println("Latitude:");
    Serial.println(gps.location.lat(), 6);
    Serial.println("Longitude:");
    Serial.println(gps.location.lng(), 6);
    Serial.println("Speed MPH:");
    Serial.println(gps.speed.mph());
    Serial.println("Altitude Feet:");
    Serial.println(gps.altitude.feet());
    Serial.println("");
  }*/
  
    sensors.requestTemperatures();
    
    
 // start working...
    //Serial.println("=================================");
    //Serial.println("*********************************");
    //Serial.println("Sample Data...");
  
  // read without samples.
  byte temperature = 0;
  byte humidity = 0;
  int err = SimpleDHTErrSuccess;
  if ((err = dht11.read(&temperature, &humidity, NULL)) != SimpleDHTErrSuccess) {
    Serial.print("Read DHT11 failed, err="); 
    Serial.println(err);
    delay(100);
    return;
  }
  
  Serial.println("Enviroment Humidity: ");
  Serial.print((int)temperature); Serial.println(" C "); 
  Serial.print((int)humidity); Serial.println(" H");
  delay(120);
   
 
  Serial.println("Underwater TEMP: ");
  Serial.print(sensors.getTempCByIndex(0));
  //Serial.print((char)223);
  Serial.print("C");
  Serial.println();
  
  delay(100);
//  return;

 
int TsensorValue = analogRead(A0);// read the input on analog pin 0:
  float voltage = TsensorValue * (5.0 / 1024.0); // Convert the analog reading (which goes from 0 - 1023) to a voltage (0 - 5V):
  Serial.println("Underwater Turbidity : ");
  Serial.println(voltage); // print out the value you read:
  delay(130);;

  for(int i=0;i<10;i++) 
 { 
  buf[i]=analogRead(analogInPin);
  delay(100);
 }
 for(int i=0;i<9;i++)
 {
  for(int j=i+1;j<10;j++)
  {
   if(buf[i]>buf[j])
   {
    temp=buf[i];
    buf[i]=buf[j];
    buf[j]=temp;
   }
  }
 }
 avgValue=0;
 for(int i=2;i<8;i++)
 avgValue+=buf[i];
 float pHVol=(float)avgValue*5.0/1024/6;
 float phValue = -5.70 * pHVol + 21.34;
 Serial.println("PH sensor : ");
 Serial.println(phValue);
 delay(120);

 
  Serial.println("------------------------------------------------------------------------------------------------");
  // Serial.println(phValue);
  // Serial.println(voltage); 
  // Serial.println(sensors.getTempCByIndex(0));
   //Serial.print((int)temperature); Serial.print(" C , "); 
  //Serial.print((int)humidity); Serial.println(" H");
  // Serial.println("  ");
   /////////////////////////////////
   // const char text[] = "Hello World";
   //radio.write(&text, sizeof(text));
  data.b1     = ((int)temperature);
  data.b2     = ((int)humidity); 
  data.b3     = (sensors.getTempCByIndex(0));
  data.b4     = (voltage);
  data.b5    = (phValue);
  digitalWrite(LED,HIGH);
delay(200);
digitalWrite(LED,LOW);
delay(50);
digitalWrite(LED2,HIGH);
delay(200);
digitalWrite(LED2,LOW);
delay(100);
digitalWrite(LED3,HIGH);
delay(200);
digitalWrite(LED3,LOW);
delay(100);

  
    ///Serial.println(data.b1);
    // Serial.println(data.b2);
     // Serial.println(data.b3);
      // Serial.println(data.b4);
     //    Serial.println(data.b5);*/
  delay(100);
  radio.write(&data, sizeof(MyData));
  
  
  delay(140);



   
 
 
  
}
